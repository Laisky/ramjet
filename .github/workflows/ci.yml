name: ci

on:
  push:
    branches:
      - 'master'
      - 'test/ci'

jobs:
  build_latest:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      -
        name: Build and push latest
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ppcelery/ramjet:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build_hash:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Add SHORT_SHA env property with commit short sha
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-7`" >> $GITHUB_ENV

      -
        name: Build and push hash label
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ppcelery/ramjet:${{ env.SHORT_SHA }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
      runs-on: ubuntu-latest
      needs: build_latest
      steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.TARGET_HOST }}
          username: ${{ secrets.TARGET_HOST_USERNAME }}
          password: ${{ secrets.TARGET_HOST_PASSWORD }}
          port: ${{ secrets.TARGET_HOST_SSH_PORT }}
          script: |
            docker pull ppcelery/ramjet:latest
            cd /home/ubuntu/repo/VPS
            docker-compose -f bj-docker-compose.yml up -d --remove-orphans --force-recreate ramjet
            docker ps

  # ssh_test:
  #     runs-on: ubuntu-latest
  #     steps:
  #     - name: executing remote ssh commands using password
  #       uses: appleboy/ssh-action@v1.0.3
  #       with:
  #         host: ${{ secrets.TARGET_HOST }}
  #         username: ${{ secrets.TARGET_HOST_USERNAME }}
  #         password: ${{ secrets.TARGET_HOST_PASSWORD }}
  #         port: ${{ secrets.TARGET_HOST_SSH_PORT }}
  #         script: |
  #           pwd
  #           cd /home/ubuntu/repo/VPS
  #           pwd
  #           docker ps
